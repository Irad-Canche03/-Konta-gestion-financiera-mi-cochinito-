#include <stdio.h>
#include <stdlib.h>
#include <string.h>

const int MAX_DESC = 100;
const int MAX_CAT = 30;
const char *ARCHIVO_DATOS = "movimientos.txt";

typedef enum {
	INGRESO = 1,
		GASTO = 2
} TipoOperacion;

typedef struct {
	char descripcion[100];
	char categoria[30];
	char fecha[11];
	float monto;
	TipoOperacion tipo;
} Movimiento;

// Prototipos
void mostrarMenuPrincipal();
void registrarMovimiento();
void verBalanceFinanciero();
void generarReporte();
void funcionNoImplementada(const char *nombre);

int main() {
	int opcion;
	
	do {
		mostrarMenuPrincipal();
		printf("Seleccione una opción: ");
		scanf("%d", &opcion);
		getchar();
		
		switch (opcion) {
		case 1:
			registrarMovimiento();
			break;
		case 2:
			verBalanceFinanciero();
			break;
		case 3:
			generarReporte();
			break;
		case 4:
			funcionNoImplementada("Calcular impuestos");
			break;
		case 5:
			funcionNoImplementada("Exportar declaración");
			break;
		case 6:
			printf("Saliendo del sistema...\n");
			break;
		default:
			printf("Opción no válida. Intente de nuevo.\n");
		}
	} while (opcion != 6);
	
	return 0;
}

void mostrarMenuPrincipal() {
	printf("\n============================\n");
	printf("     GESTOR FINANCIERO\n");
	printf("============================\n");
	printf("1. Registrar ingreso/gasto\n");
	printf("2. Ver balance financiero\n");
	printf("3. Generar reporte\n");
	printf("4. Calcular impuestos\n");
	printf("5. Exportar declaración\n");
	printf("6. Salir\n");
}

void funcionNoImplementada(const char *nombre) {
	printf("? La opción \"%s\" aún no está implementada en el programa.\n", nombre);
}

void registrarMovimiento() {
	Movimiento m;
	int tipoEntrada;
	
	printf("\n--- Registro de Movimiento ---\n");
	printf("Tipo [1 = Ingreso | 2 = Gasto]: ");
	scanf("%d", &tipoEntrada);
	getchar();
	
	if (tipoEntrada != INGRESO && tipoEntrada != GASTO) {
		printf("Tipo inválido. Operación cancelada.\n");
		return;
	}
	
	m.tipo = tipoEntrada;
	
	printf("Descripción: ");
	fgets(m.descripcion, sizeof(m.descripcion), stdin);
	m.descripcion[strcspn(m.descripcion, "\n")] = '\0';
	
	printf("Categoría: ");
	fgets(m.categoria, sizeof(m.categoria), stdin);
	m.categoria[strcspn(m.categoria, "\n")] = '\0';
	
	printf("Fecha (DD/MM/AAAA): ");
	fgets(m.fecha, sizeof(m.fecha), stdin);
	m.fecha[strcspn(m.fecha, "\n")] = '\0';
	
	printf("Monto: ");
	scanf("%f", &m.monto);
	getchar();
	
	if (m.monto <= 0) {
		printf("Monto inválido. Operación cancelada.\n");
		return;
	}
	
	FILE *archivo = fopen(ARCHIVO_DATOS, "a");
	if (!archivo) {
		printf("Error al abrir el archivo.\n");
		return;
	}
	
	fprintf(archivo, "%s|%s|%s|%.2f|%d\n",
			m.fecha, m.categoria, m.descripcion, m.monto, m.tipo);
	fclose(archivo);
	
	printf("? Movimiento registrado correctamente.\n");
}

void verBalanceFinanciero() {
	FILE *archivo = fopen(ARCHIVO_DATOS, "r");
	if (!archivo) {
		printf("No hay datos para mostrar.\n");
		return;
	}
	
	char linea[256];
	float totalIngresos = 0, totalGastos = 0;
	Movimiento m;
	
	while (fgets(linea, sizeof(linea), archivo)) {
		sscanf(linea, "%10[^|]|%29[^|]|%99[^|]|%f|%d",
			   m.fecha, m.categoria, m.descripcion, &m.monto, (int*)&m.tipo);
		
		if (m.tipo == INGRESO)
			totalIngresos += m.monto;
		else if (m.tipo == GASTO)
			totalGastos += m.monto;
	}
	
	fclose(archivo);
	
	printf("\n--- Balance Financiero ---\n");
	printf("Total de ingresos: $%.2f\n", totalIngresos);
	printf("Total de gastos  : $%.2f\n", totalGastos);
	printf("Saldo disponible : $%.2f\n", totalIngresos - totalGastos);
}

void generarReporte() {
	FILE *archivo = fopen(ARCHIVO_DATOS, "r");
	if (!archivo) {
		printf("No hay movimientos registrados aún.\n");
		return;
	}
	
	char linea[256];
	Movimiento m;
	
	printf("\n--- Reporte de Movimientos ---\n");
	while (fgets(linea, sizeof(linea), archivo)) {
		sscanf(linea, "%10[^|]|%29[^|]|%99[^|]|%f|%d",
			   m.fecha, m.categoria, m.descripcion, &m.monto, (int*)&m.tipo);
		
		printf("Fecha: %s | Tipo: %s | Monto: $%.2f | Categoría: %s | Descripción: %s\n",
			   m.fecha,
			   (m.tipo == INGRESO ? "Ingreso" : "Gasto"),
			   m.monto,
			   m.categoria,
			   m.descripcion
			   );
	}
	
	fclose(archivo);
}
